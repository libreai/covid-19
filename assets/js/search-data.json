{
  
    
        "post0": {
            "title": "Covid-19 in Ireland",
            "content": "import altair as alt import pandas as pd import numpy as np . # cases = pd.read_csv(&#39;data/time_series_19-covid-Confirmed.csv&#39;) cases_ie = pd.read_csv(&#39;data/ie-covid19-ts.csv&#39;) cases_it = pd.read_csv(&#39;data/it-covid19-ts.csv&#39;) cases_es = pd.read_csv(&#39;data/es-covid19-ts.csv&#39;) . cases_ie.tail() . date country cases deaths recovered days_since_10 . 17 2020-03-18 | ie | 366 | 2 | 5 | 14 | . 18 2020-03-19 | ie | 557 | 3 | 5 | 15 | . 19 2020-03-20 | ie | 683 | 3 | 5 | 16 | . 20 2020-03-21 | ie | 785 | 3 | 5 | 17 | . 21 2020-03-22 | ie | 906 | 4 | 5 | 18 | . cases_ie[cases_ie[&#39;date&#39;] == &#39;2020-03-17&#39;] . date country cases deaths recovered days_since_10 . 16 2020-03-17 | ie | 292 | 2 | 5 | 13 | . # cases_ie.tail(), cases_it.tail(), cases_es.tail() . new_cases_ie = np.diff(cases_ie[&#39;cases&#39;]) new_cases_ie = np.hstack((np.array([0]), new_cases_ie)) new_cases_it = np.diff(cases_it[&#39;cases&#39;]) new_cases_it = np.hstack((np.array([0]), new_cases_it)) new_cases_es = np.diff(cases_es[&#39;cases&#39;]) new_cases_es = np.hstack((np.array([0]), new_cases_es)) . population_in_m_ie=4.83 population_in_m_it=60.48 population_in_m_es=46.66 . source_ie = pd.DataFrame({ &#39;country&#39;: &#39;Ireland&#39;, &#39;date&#39;: cases_ie[&#39;date&#39;], &#39;days_since_10_cases&#39;: cases_ie[&#39;days_since_10&#39;], &#39;confirmed_cases&#39;: cases_ie[&#39;cases&#39;], &#39;confirmed_cases_per_million&#39;: np.round(cases_ie[&#39;cases&#39;]/population_in_m_ie), &#39;new_cases&#39;: new_cases_ie, &#39;deaths&#39;: cases_ie[&#39;deaths&#39;] }) source_it = pd.DataFrame({ &#39;country&#39;: &#39;Italy&#39;, &#39;date&#39;: cases_it[&#39;date&#39;], # &#39;days_since_10_cases&#39;: cases_it[&#39;days_since_10&#39;][cases_it[&#39;days_since_10&#39;] &lt; 18], &#39;days_since_10_cases&#39;: cases_it[&#39;days_since_10&#39;], &#39;confirmed_cases&#39;: cases_it[&#39;cases&#39;], &#39;confirmed_cases_per_million&#39;: np.round(cases_it[&#39;cases&#39;]/population_in_m_it), &#39;new_cases&#39;: new_cases_it, &#39;deaths&#39;: cases_it[&#39;deaths&#39;] }) source_es = pd.DataFrame({ &#39;country&#39;: &#39;Spain&#39;, &#39;date&#39;: cases_es[&#39;date&#39;], # &#39;days_since_10_cases&#39;: cases_es[&#39;days_since_10&#39;][cases_es[&#39;days_since_10&#39;] &lt; 18], &#39;days_since_10_cases&#39;: cases_es[&#39;days_since_10&#39;], &#39;confirmed_cases&#39;: cases_es[&#39;cases&#39;], &#39;confirmed_cases_per_million&#39;: np.round(cases_es[&#39;cases&#39;]/population_in_m_es), &#39;new_cases&#39;: new_cases_es, &#39;deaths&#39;: cases_es[&#39;deaths&#39;] }) . cases_ie_plot = alt.Chart(source_ie).mark_circle( color=&#39;green&#39;, opacity=0.7).encode( x=&#39;days_since_10_cases:Q&#39;, # y=&#39;confirmed_cases:Q&#39;, y=alt.Y(&#39;confirmed_cases:Q&#39;, scale=alt.Scale(type=&#39;sqrt&#39;)), size=alt.Size(&#39;new_cases:Q&#39;, title=&quot;Number of new cases in Ireland&quot;), tooltip=[&#39;country&#39;, &#39;date:T&#39;, &#39;confirmed_cases&#39;, &#39;new_cases&#39;, &#39;deaths&#39;] )#.interactive() cases_ie_plot . cases_it_plot = alt.Chart(source_it).mark_line( color=&#39;blue&#39;, opacity=0.5, strokeDash=[4, 4], strokeWidth=3, point=True ).encode( x=&#39;days_since_10_cases:Q&#39;, # y=&#39;confirmed_cases:Q&#39;, y=alt.Y(&#39;confirmed_cases:Q&#39;, scale=alt.Scale(type=&#39;sqrt&#39;)), # size=&#39;new_cases:Q&#39;, tooltip=[&#39;country&#39;, &#39;date:T&#39;, &#39;confirmed_cases&#39;, &#39;new_cases&#39;, &#39;deaths&#39;], color=alt.Color(&#39;country&#39;, scale=alt.Scale(range=[&#39;blue&#39;], domain=[&#39;Italy&#39;]), title=&quot;Country&quot;) ) cases_it_plot . cases_es_plot = alt.Chart(source_es).mark_line( color=&#39;red&#39;, opacity=0.5, strokeDash=[4,4], strokeWidth=3, point=True ).encode( x=&#39;days_since_10_cases:Q&#39;, # y=&#39;confirmed_cases:Q&#39;, y=alt.Y(&#39;confirmed_cases:Q&#39;, scale=alt.Scale(type=&#39;sqrt&#39;)), # size=&#39;new_cases:Q&#39;, tooltip=[&#39;country&#39;, &#39;date:T&#39;, &#39;confirmed_cases&#39;, &#39;new_cases&#39;, &#39;deaths&#39;], color=alt.Color(&#39;country&#39;, scale=alt.Scale(range=[&#39;red&#39;], domain=[&#39;Spain&#39;]), title=&quot;&quot;) ) cases_es_plot . alt.layer(cases_it_plot, cases_es_plot, cases_ie_plot).properties( width=800, height=600 ).resolve_scale( color=&#39;independent&#39;, shape=&#39;independent&#39; ) . . cases_per_million_ie_plot = alt.Chart(source_ie).mark_circle( color=&#39;green&#39;, opacity=0.7).encode( x=&#39;days_since_10_cases:Q&#39;, # y=&#39;confirmed_cases:Q&#39;, y=alt.Y(&#39;confirmed_cases_per_million:Q&#39;, scale=alt.Scale(type=&#39;sqrt&#39;)), size=alt.Size(&#39;new_cases:Q&#39;, title=&quot;Number of new cases in Ireland&quot;), tooltip=[&#39;country&#39;, &#39;date:T&#39;, &#39;confirmed_cases:Q&#39;, &#39;confirmed_cases_per_million:Q&#39;, &#39;new_cases&#39;, &#39;deaths&#39;] )#.interactive() cases_per_million_ie_plot . cases_per_million_it_plot = alt.Chart(source_it).mark_line( color=&#39;blue&#39;, opacity=0.5, strokeDash=[4, 4], strokeWidth=3, point=True ).encode( x=&#39;days_since_10_cases:Q&#39;, # y=&#39;confirmed_cases:Q&#39;, y=alt.Y(&#39;confirmed_cases_per_million:Q&#39;, scale=alt.Scale(type=&#39;sqrt&#39;)), # size=&#39;new_cases:Q&#39;, tooltip=[&#39;country&#39;, &#39;date:T&#39;, &#39;confirmed_cases:Q&#39;, &#39;confirmed_cases_per_million:Q&#39;, &#39;new_cases&#39;, &#39;deaths&#39;], color=alt.Color(&#39;country&#39;, scale=alt.Scale(range=[&#39;blue&#39;], domain=[&#39;Italy&#39;]), title=&quot;Country&quot;) ) cases_per_million_it_plot . cases_per_million_es_plot = alt.Chart(source_es).mark_line( color=&#39;red&#39;, opacity=0.5, strokeDash=[4,4], strokeWidth=3, point=True ).encode( x=&#39;days_since_10_cases:Q&#39;, # y=&#39;confirmed_cases:Q&#39;, y=alt.Y(&#39;confirmed_cases_per_million:Q&#39;, scale=alt.Scale(type=&#39;sqrt&#39;)), # size=&#39;new_cases:Q&#39;, tooltip=[&#39;country&#39;, &#39;date:T&#39;, &#39;confirmed_cases:Q&#39;, &#39;confirmed_cases_per_million:Q&#39;, &#39;new_cases&#39;, &#39;deaths&#39;], color=alt.Color(&#39;country&#39;, scale=alt.Scale(range=[&#39;red&#39;], domain=[&#39;Spain&#39;]), title=&quot;&quot;) ) cases_per_million_es_plot . alt.layer(cases_per_million_ie_plot, cases_per_million_it_plot, cases_per_million_es_plot).properties( width=800, height=600 ).resolve_scale( color=&#39;independent&#39;, shape=&#39;independent&#39; ) .",
            "url": "https://libreai.github.io/covid-19/libreai/2020/03/21/covid-19-ie.html",
            "relUrl": "/libreai/2020/03/21/covid-19-ie.html",
            "date": " â€¢ Mar 21, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About",
          "content": "Libre AI .",
          "url": "https://libreai.github.io/covid-19/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  
  

  
  

}